name: Release Main
on:
  push:
    branches:
      - main

jobs:
  correct_repository:
    runs-on: ubuntu-latest
    steps:
      - name: fail on fork
        if: github.repository_owner != 'cmu-delphi'
        run: exit 1

  create_release:
    needs: correct_repository
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Extract version
        id: extract_version
        run: |
          python -m pip install bump2version
          echo -n "::set-output name=version::"
          bump2version --dry-run --list patch | grep ^current_version | sed -r s,"^.*=",,
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ steps.extract_version.outputs.version }}
          publish: true
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.create_release.outputs.tag_name }}

  sync_dev:
    needs: correct_repository
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: dev
          fetch-depth: 0
          ssh-key: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_SSH }}
      - name: Reset dev branch
        run: |
          git fetch origin main:main
          git merge main
          git push
