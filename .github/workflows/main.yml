# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push to the dev and main branches
  push:
    branches: [ dev, main ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: cmu-delphi-deploy-machine
          password: ${{ secrets.CMU_DELPHI_DEPLOY_MACHINE_PAT }}

      # Runs a single command using the runners shell
      - name: Build and deploy dashboard docker image
        run: |
	        baseRef="${GITHUB_REF#*/}"
          baseRef="${baseRef#*/}"
          case "${baseRef}" in
          main)
            imageTag="latest"
            ;;
          *)
            imageTag="${baseRef//\//_}" # replace `/` with `_` in branch name
            ;;
          esac
          echo "using tag: --${imageTag}--"
          make deploy_dashboard imageTag=$imageTag

	        # Trigger a webhook update
          curl -H "Authorization: Bearer ${{ secrets.DELPHI_DEPLOY_WEBHOOK_TOKEN }}" \
               -X POST ${{ secrets.DELPHI_DEPLOY_WEBHOOK_URL }} \
               -H "Content-Type: application/x-www-form-urlencoded" \
               -d "repository=ghcr.io/cmu-delphi/forecast-eval&tag=$imageTag"
